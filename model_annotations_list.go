/*
 * BitBucket Server Code Insights API
 *
 * BitBucket Server Code Insights API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package insights

import (
	"encoding/json"
)

// AnnotationsList struct for AnnotationsList
type AnnotationsList struct {
	Annotations []Annotation `json:"annotations"`
}

// NewAnnotationsList instantiates a new AnnotationsList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnnotationsList(annotations []Annotation) *AnnotationsList {
	this := AnnotationsList{}
	this.Annotations = annotations
	return &this
}

// NewAnnotationsListWithDefaults instantiates a new AnnotationsList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnnotationsListWithDefaults() *AnnotationsList {
	this := AnnotationsList{}
	return &this
}

// GetAnnotations returns the Annotations field value
func (o *AnnotationsList) GetAnnotations() []Annotation {
	if o == nil {
		var ret []Annotation
		return ret
	}

	return o.Annotations
}

// GetAnnotationsOk returns a tuple with the Annotations field value
// and a boolean to check if the value has been set.
func (o *AnnotationsList) GetAnnotationsOk() (*[]Annotation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Annotations, true
}

// SetAnnotations sets field value
func (o *AnnotationsList) SetAnnotations(v []Annotation) {
	o.Annotations = v
}

func (o AnnotationsList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["annotations"] = o.Annotations
	}
	return json.Marshal(toSerialize)
}

type NullableAnnotationsList struct {
	value *AnnotationsList
	isSet bool
}

func (v NullableAnnotationsList) Get() *AnnotationsList {
	return v.value
}

func (v *NullableAnnotationsList) Set(val *AnnotationsList) {
	v.value = val
	v.isSet = true
}

func (v NullableAnnotationsList) IsSet() bool {
	return v.isSet
}

func (v *NullableAnnotationsList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnnotationsList(val *AnnotationsList) *NullableAnnotationsList {
	return &NullableAnnotationsList{value: val, isSet: true}
}

func (v NullableAnnotationsList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnnotationsList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
