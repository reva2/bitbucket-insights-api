/*
 * BitBucket Server Code Insights API
 *
 * BitBucket Server Code Insights API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package insights

import (
	"encoding/json"
)

// ReportsListResponse struct for ReportsListResponse
type ReportsListResponse struct {
	Size          int32    `json:"size"`
	Limit         *int32   `json:"limit,omitempty"`
	Start         int32    `json:"start"`
	IsLastPage    bool     `json:"isLastPage"`
	NextPageStart *int32   `json:"nextPageStart,omitempty"`
	Values        []Report `json:"values"`
}

// NewReportsListResponse instantiates a new ReportsListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReportsListResponse(size int32, start int32, isLastPage bool, values []Report) *ReportsListResponse {
	this := ReportsListResponse{}
	this.Size = size
	this.Start = start
	this.IsLastPage = isLastPage
	this.Values = values
	return &this
}

// NewReportsListResponseWithDefaults instantiates a new ReportsListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReportsListResponseWithDefaults() *ReportsListResponse {
	this := ReportsListResponse{}
	return &this
}

// GetSize returns the Size field value
func (o *ReportsListResponse) GetSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *ReportsListResponse) GetSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *ReportsListResponse) SetSize(v int32) {
	o.Size = v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *ReportsListResponse) GetLimit() int32 {
	if o == nil || o.Limit == nil {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportsListResponse) GetLimitOk() (*int32, bool) {
	if o == nil || o.Limit == nil {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *ReportsListResponse) HasLimit() bool {
	if o != nil && o.Limit != nil {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *ReportsListResponse) SetLimit(v int32) {
	o.Limit = &v
}

// GetStart returns the Start field value
func (o *ReportsListResponse) GetStart() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Start
}

// GetStartOk returns a tuple with the Start field value
// and a boolean to check if the value has been set.
func (o *ReportsListResponse) GetStartOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Start, true
}

// SetStart sets field value
func (o *ReportsListResponse) SetStart(v int32) {
	o.Start = v
}

// GetIsLastPage returns the IsLastPage field value
func (o *ReportsListResponse) GetIsLastPage() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsLastPage
}

// GetIsLastPageOk returns a tuple with the IsLastPage field value
// and a boolean to check if the value has been set.
func (o *ReportsListResponse) GetIsLastPageOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsLastPage, true
}

// SetIsLastPage sets field value
func (o *ReportsListResponse) SetIsLastPage(v bool) {
	o.IsLastPage = v
}

// GetNextPageStart returns the NextPageStart field value if set, zero value otherwise.
func (o *ReportsListResponse) GetNextPageStart() int32 {
	if o == nil || o.NextPageStart == nil {
		var ret int32
		return ret
	}
	return *o.NextPageStart
}

// GetNextPageStartOk returns a tuple with the NextPageStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportsListResponse) GetNextPageStartOk() (*int32, bool) {
	if o == nil || o.NextPageStart == nil {
		return nil, false
	}
	return o.NextPageStart, true
}

// HasNextPageStart returns a boolean if a field has been set.
func (o *ReportsListResponse) HasNextPageStart() bool {
	if o != nil && o.NextPageStart != nil {
		return true
	}

	return false
}

// SetNextPageStart gets a reference to the given int32 and assigns it to the NextPageStart field.
func (o *ReportsListResponse) SetNextPageStart(v int32) {
	o.NextPageStart = &v
}

// GetValues returns the Values field value
func (o *ReportsListResponse) GetValues() []Report {
	if o == nil {
		var ret []Report
		return ret
	}

	return o.Values
}

// GetValuesOk returns a tuple with the Values field value
// and a boolean to check if the value has been set.
func (o *ReportsListResponse) GetValuesOk() (*[]Report, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Values, true
}

// SetValues sets field value
func (o *ReportsListResponse) SetValues(v []Report) {
	o.Values = v
}

func (o ReportsListResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["size"] = o.Size
	}
	if o.Limit != nil {
		toSerialize["limit"] = o.Limit
	}
	if true {
		toSerialize["start"] = o.Start
	}
	if true {
		toSerialize["isLastPage"] = o.IsLastPage
	}
	if o.NextPageStart != nil {
		toSerialize["nextPageStart"] = o.NextPageStart
	}
	if true {
		toSerialize["values"] = o.Values
	}
	return json.Marshal(toSerialize)
}

type NullableReportsListResponse struct {
	value *ReportsListResponse
	isSet bool
}

func (v NullableReportsListResponse) Get() *ReportsListResponse {
	return v.value
}

func (v *NullableReportsListResponse) Set(val *ReportsListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReportsListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReportsListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReportsListResponse(val *ReportsListResponse) *NullableReportsListResponse {
	return &NullableReportsListResponse{value: val, isSet: true}
}

func (v NullableReportsListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReportsListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
